#include<bits/stdc++.h>
int row[8]={-1,0,1,0,-1,1,-1,1};
int col[8]={0,1,0,-1,-1,-1,1,1};
void dfs(int **grid,int r,int c,int i,int j)
    {
        
        stack<pair<int,int>> q;
        q.push(make_pair(i, j));
        grid[i][j]=2;
        while(!q.empty())
        {
            int x=q.top().first;
            int y=q.top().second;
            q.pop();
            for(int k=0;k<8;k++)
            {
                int tempx=x+row[k];
                int tempy=y+col[k];
                if(tempx>=r||tempx<0||tempy>=c||tempy<0||grid[tempx][tempy]==0||grid[tempx][tempy]==2)
                    continue;
                else
                {
                    q.push(make_pair(tempx,tempy));
                    grid[tempx][tempy]=2;
                }
            }
        }
    }
int getTotalIslands(int** grid, int r, int c)
{
   int count=0;
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(grid[i][j]==1)
                {
                    count++;
                    dfs(grid,r,c,i,j);
                }
            }
        }
        return count;
}
