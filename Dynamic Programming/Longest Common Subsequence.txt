#include<bits/stdc++.h>
int helper(int i,int j,string &s,string &t,vector<vector<int>> &dp){
    if(i==0||j==0)
        return 0;
    if(dp[i][j]!=-1)
        return dp[i][j];
    if(s[i-1]==t[j-1]){
        return dp[i][j]=1+helper(i-1,j-1,s,t,dp);
    }
    else 
        return dp[i][j]=max(helper(i-1,j,s,t,dp),helper(i,j-1,s,t,dp));
}
int lcs(string s, string t)
{
    int n=s.length(),m=t.length();
    vector<vector<int>> dp(n+1,vector<int> (m+1,-1));
    return helper(n,m,s,t,dp);
}