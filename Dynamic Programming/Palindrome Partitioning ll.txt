#include<bits/stdc++.h>
int n;
bool check(string t){
    int j=t.length()-1;
    int i=0;
    while(i<j){
        if(t[i]!=t[j])
            return false;
        i++;
        j--;
    }
    return true;
}
int helper(int pos,string &s,vector<int> &dp){
    if(pos==n)
        return 0;
    if(dp[pos]!=-1)
        return dp[pos];
    
    string t;
    int temp=1e9;
    for(int i=pos;i<n;i++){
        t+=s[i];
        if(check(t)){
            temp=min(temp,1+helper(i+1,s,dp));
        }
    }
    return dp[pos]=temp;
}
int palindromePartitioning(string str) {
    n=str.length();
    vector<int> dp(n,-1);
    return helper(0,str,dp)-1;
}
