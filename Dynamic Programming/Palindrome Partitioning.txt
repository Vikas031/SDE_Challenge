bool ispalindrome(string s){
    int j=s.length()-1,i=0;
    while(i<j){
        if(s[i]!=s[j])
            return false;
        i++;j--;
    }    
    return true;
}
vector<vector<string>> ans;
int n;
void helper(string &s,int pos,vector<string> &temp){
    if(pos==n){
        ans.push_back(temp);
        return ;
    }
    string t;
    for(int i=pos;i<n;i++){
        t+=s[i];
        if(ispalindrome(t)){
            temp.push_back(t);
            helper(s,i+1,temp);
            temp.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
    n=s.length();
    vector<string> temp;
    helper(s,0,temp);
    return ans;
}